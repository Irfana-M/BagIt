<%- include("../../views/partials/admin/header", { activePage: activePage }) %>

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Sales Report</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: 'Inter', sans-serif;
    }

    body {
      background-color: #f5f6fa;
      color: #1a202c;
      line-height: 1.6;
    }

    .container {
      max-width: 1280px;
      margin: 0 auto;
      padding: 24px;
    }

    header {
      margin-bottom: 32px;
    }

    .title {
      font-size: 32px;
      font-weight: 700;
      color: #1a202c;
    }

    .section {
      background-color: #ffffff;
      border-radius: 12px;
      padding: 24px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      margin-bottom: 24px;
    }

    .filters {
      display: flex;
      align-items: center;
      gap: 16px;
      margin-bottom: 24px;
      flex-wrap: wrap;
    }

    .custom-dropdown, .date-input {
      padding: 10px 14px;
      border: 1px solid #e2e8f0;
      border-radius: 8px;
      font-size: 14px;
      background-color: #fff;
      color: #4a5568;
      transition: border-color 0.2s ease;
    }

    .custom-dropdown:focus, .date-input:focus {
      border-color: #3182ce;
      outline: none;
    }

    .btn {
      padding: 10px 20px;
      border: none;
      border-radius: 8px;
      font-size: 14px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s ease;
    }

    .btn-primary {
      background-color: #3182ce;
      color: #fff;
    }

    .btn-primary:hover {
      background-color: #2b6cb0;
    }

    .btn-secondary {
      background-color: #edf2f7;
      color: #4a5568;
    }

    .btn-secondary:hover {
      background-color: #e2e8f0;
    }

    .data-table {
      width: 100%;
      border-collapse: collapse;
    }

    .data-table th, .data-table td {
      padding: 14px;
      text-align: left;
      font-size: 14px;
    }

    .data-table th {
      background-color: #3182ce;
      color: #fff;
      font-weight: 600;
      text-transform: uppercase;
    }

    .data-table td {
      border-bottom: 1px solid #edf2f7;
      color: #4a5568;
    }

    .data-table tr:hover {
      background-color: #f7fafc;
    }

    .no-data {
      text-align: center;
      padding: 24px;
      color: #718096;
      font-style: italic;
      font-size: 16px;
    }

    .action-buttons {
      display: flex;
      gap: 12px;
      justify-content: flex-end;
      margin-top: 20px;
    }

    .pagination {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: 12px;
      margin-top: 20px;
    }

    .pagination .btn {
      padding: 8px 16px;
    }

    .pagination span {
      font-size: 14px;
      color: #4a5568;
    }

    h3 {
      font-size: 20px;
      font-weight: 600;
      color: #1a202c;
      margin-bottom: 16px;
    }

    @media (max-width: 768px) {
      .filters {
        flex-direction: column;
        align-items: flex-start;
      }
      .action-buttons {
        justify-content: center;
      }
      .pagination {
        flex-direction: column;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <header>
      <div class="title">Sales Report</div>
    </header>

    <!-- Sales Data Table -->
    <div class="section">
      <h3>Sales Report</h3>
      <div class="data-table-container">
        <div class="filters">
          <select class="custom-dropdown" id="report-filter-type">
            <option value="today" selected>Today</option>
            <option value="week">This Week</option>
            <option value="month">This Month</option>
            <option value="custom">Custom</option>
          </select>
          <div class="date-filters" id="report-custom-date" style="display: none;">
            <input type="date" class="date-input" id="report-start-date">
            <input type="date" class="date-input" id="report-end-date">
          </div>
          <button class="btn btn-primary" id="generate-report">Generate Report</button>
        </div>

        <table class="data-table">
          <thead>
            <tr>
              <th>Order Id</th>
              <th>User Name</th>
              <th>Product Name</th>
              <th>Product Category</th>
              <th>Quantity Sold</th>
              <th>Unit Price</th>
              <th>Discount Applied</th>
              <th>Order Status</th>
              <th>Order Date</th>
            </tr>
          </thead>
          <tbody id="sales-data-body">
            <% if (Array.isArray(salesData) && salesData.length > 0) { %>
              <% salesData.forEach(data => { %>
                <tr>
                  <td><%= data.orderId %></td>
                  <td><%= data.customerName %></td>
                  <td><%= data.productName %></td>
                  <td><%= data.categoryName %></td>
                  <td><%= data.quantitySold %></td>
                  <td>₹<%= data.unitPrice.toFixed(2) %></td>
                  <td>₹<%= data.discountApplied.toFixed(2) %></td>
                  <td><%= data.orderStatus %></td>
                  <td><%= data.orderDate %></td>
                </tr>
              <% }) %>
            <% } else { %>
              <tr class="no-data">
                <td colspan="9">No sales data found</td>
              </tr>
            <% } %>
          </tbody>
        </table>

        <!-- Pagination Controls -->
        <div class="pagination" id="pagination-controls">
          <button class="btn btn-secondary" id="prev-page" disabled>Previous</button>
          <span id="page-info">Page <%= currentPage %> of <%= totalPages %></span>
          <button class="btn btn-secondary" id="next-page" <%= currentPage >= totalPages ? 'disabled' : '' %>>Next</button>
        </div>

        <div class="action-buttons">
          <button class="btn btn-secondary" id="download-pdf"><i class="fas fa-file-pdf"></i> Download PDF</button>
          <button class="btn btn-secondary" id="download-excel"><i class="fas fa-file-excel"></i> Download Excel</button>
        </div>
      </div>
    </div>
  </div>

  <!-- Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <script>
    // [Previous JavaScript code remains unchanged]
    document.addEventListener("DOMContentLoaded", () => {
      let currentPage = parseInt("<%= currentPage %>") || 1;
      let limit = parseInt("<%= limit %>") || 10;
      let totalPages = parseInt("<%= totalPages %>") || 1;

      const reportFilterType = document.getElementById("report-filter-type");
      const reportCustomDate = document.getElementById("report-custom-date");
      reportFilterType.addEventListener("change", (e) => {
        reportCustomDate.style.display = e.target.value === "custom" ? "flex" : "none";
      });

      document.getElementById("generate-report").addEventListener("click", () => {
        const filter = reportFilterType.value;
        const startDate = document.getElementById("report-start-date").value;
        const endDate = document.getElementById("report-end-date").value;
        fetchTableData(filter, startDate, endDate, 1);
      });

      document.getElementById("prev-page").addEventListener("click", () => {
        if (currentPage > 1) {
          currentPage--;
          fetchTableData(reportFilterType.value, document.getElementById("report-start-date").value, document.getElementById("report-end-date").value, currentPage);
        }
      });

      document.getElementById("next-page").addEventListener("click", () => {
        if (currentPage < totalPages) {
          currentPage++;
          fetchTableData(reportFilterType.value, document.getElementById("report-start-date").value, document.getElementById("report-end-date").value, currentPage);
        }
      });

      document.getElementById("download-pdf").addEventListener("click", () => {
        const filter = reportFilterType.value;
        const startDate = document.getElementById("report-start-date").value;
        const endDate = document.getElementById("report-end-date").value;
        window.location.href = `/admin/sales/download-pdf?filter=${filter}&start=${startDate}&end=${endDate}`;
      });

      document.getElementById("download-excel").addEventListener("click", () => {
        const filter = reportFilterType.value;
        const startDate = document.getElementById("report-start-date").value;
        const endDate = document.getElementById("report-end-date").value;
        window.location.href = `/admin/sales/download-excel?filter=${filter}&start=${startDate}&end=${endDate}`;
      });

      async function fetchTableData(filter, startDate, endDate, page) {
        try {
          let url = `/admin/sales?filter=${filter}&page=${page}&limit=${limit}`;
          if (filter === "custom" && startDate && endDate) {
            url += `&start=${startDate}&end=${endDate}`;
          }
          const res = await axios.get(url);
          const { salesData, currentPage: newPage, totalPages: newTotalPages } = res.data;

          currentPage = newPage;
          updateTable(salesData);
          updatePagination(newPage, newTotalPages);
        } catch (error) {
          console.error("Error fetching table data:", error);
        }
      }

      function updateTable(data) {
        const tbody = document.getElementById("sales-data-body");
        tbody.innerHTML = "";
        if (data.length > 0) {
          data.forEach(item => {
            const row = `
              <tr>
                <td>${item.orderId}</td>
                <td>${item.customerName}</td>
                <td>${item.productName}</td>
                <td>${item.categoryName}</td>
                <td>${item.quantitySold}</td>
                <td>₹${item.unitPrice.toFixed(2)}</td>
                <td>₹${item.discountApplied.toFixed(2)}</td>
                <td>${item.orderStatus}</td>
                <td>${item.orderDate}</td>
              </tr>
            `;
            tbody.innerHTML += row;
          });
        } else {
          tbody.innerHTML = `<tr class="no-data"><td colspan="9">No sales data found</td></tr>`;
        }
      }

      function updatePagination(currentPage, totalPagesNew) {
        totalPages = totalPagesNew;
        const pageInfo = document.getElementById("page-info");
        pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
        document.getElementById("prev-page").disabled = currentPage === 1;
        document.getElementById("next-page").disabled = currentPage >= totalPages;
      }
    });
  </script>
</body>
</html>