<%- include("../../views/partials/admin/header", { activePage: activePage }) %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Orders</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f3f3f3;
            color: #333;
            font-family: "Poppins", sans-serif;
        }

        .page-header {
            background-color: #7a708b;
            padding: 20px 0;
            text-align: center;
        }

        .page-title {
            color: #fff;
            font-size: 26px;
            font-weight: 600;
            margin: 0;
        }

        .search-bar {
            margin: 20px auto;
            max-width: 285px;
            display: flex;
            align-items: center;
            background: #fff;
            border-radius: 25px;
            padding: 8px;
            box-shadow: 0px 2px 10px rgba(0, 0, 0, 0.1);
        }

        .search-bar input {
            border: none;
            outline: none;
            flex: 1;
            padding: 10px;
            font-size: 16px;
        }

        .search-bar button {
            background: #7a708b;
            border: none;
            color: white;
            padding: 10px 15px;
            border-radius: 50px;
            cursor: pointer;
        }

        .orders-container {
            background-color: #fff;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.1);
        }

        .table-header {
            background-color: #7a708b;
            color: #fff;
        }

        .table th, .table td {
            padding: 12px;
            text-align: center;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
        }

        .status-delivered { background-color: #4caf50; color: #fff; }
        .status-cancelled { background-color: #f44336; color: #fff; }
        .status-pending { background-color: #ff9800; color: #fff; }

        .pagination { justify-content: center; margin-top: 20px; }

        .page-link {
            background-color: #7a708b;
            color: #fff;
            border-radius: 5px;
            margin: 0 5px;
        }

        .page-link:hover {
            background-color: #7a708b;
        }
        .product-image {
            width: 50px;
            height: 50px;
            object-fit: cover;
            border-radius: 5px;
        }
        .status-return-requested { 
            background-color: #9c27b0; /* Purple for Return Requested */
            color: #fff; 
        }
        .status-approved { 
            background-color: #4caf50; /* Green for Approved */
            color: #fff; 
        }
        .status-rejected { 
            background-color: #f44336; /* Red for Rejected */
            color: #fff; 
        }
    </style>
</head>
<body>
    <div class="page-header">
        <h1 class="page-title">Orders</h1>
    </div>

    <div class="container">
         <div class="search-bar">
            <form method="GET" action="/admin/orders" class="search-form">
                <input
                  type="text"
                  name="search"
                  value="<%= searchQuery %>" 
                  placeholder="Search by User or Product"
                />
                <button type="submit"><i class="fas fa-search"></i></button>
              </form>
        </div> 
        
          

        <div class="orders-container">
            <div class="table-responsive">
                <table class="table table-striped">
                    <thead class="table-header">
                        <tr>
                            <th>User Name</th>
                            <th>Order ID</th>
                            <th>Product Image</th>
                            <th>Product Name</th>
                            <th>Product Category</th>
                            <th>Address</th>
                            <th>Amount</th>
                            <th>Order Date</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        
                        <% orders.forEach(order => { %>
                            <% order.orderItems.forEach(item => { %>
                                <% console.log("Order:", order) %>
<% if (order.shippingAddress) { %>
  <% console.log("Shipping Address:", order.shippingAddress) %>
<% } %>
                            <tr>

                                <td><%= order.user ? order.user.name : 'Unknown User' %></td>
                                <td>#<%= order.orderId %></td>
                                <td>
                                    <% if (item.product.productImage && item.product.productImage.length > 0) { %>
                                        <img src="/uploads/product-images/<%= item.product.productImage[0] %>" alt="Product Image" class="product-image">
                                    <% } else { %>
                                        <span>No Image</span>
                                    <% } %>
                                </td>
                                <td><%= item.product.productName %></td>
                                <td><%= item.product.category ? item.product.category.name : 'Unknown Category' %></td>
                                <td>
                                    <% if (order.shippingAddress) { %>  <!-- FIXED: Used order.shippingAddress -->
                                        <%= order.shippingAddress.addressType %>,
                                        <%= order.shippingAddress.landMark %>,
                                        <%= order.shippingAddress.city %>
                                    <% } else { %>
                                        <span style="color: red;">Address not found</span>
                                    <% } %>
                                </td>
                                <td>â‚¹<%= item.product.salePrice %></td>
                                <td><%= order.formattedCreatedAt %></td>
                                <td>
                                    <span class="status-badge 
                                        <% if (item.status === 'Return Requested') { %> status-return-requested 
                                        <% } else if (item.status === 'Approved') { %> status-approved 
                                        <% } else if (item.status === 'Rejected') { %> status-rejected 
                                        <% } %>">
                                        <%= item.status %>
                                    </span>
                                
                                    <% if (item.status === 'Return Requested') { %>
                                        <button class="btn btn-warning handle-return-btn" 
                                                data-order-id="<%= order.orderId %>" 
                                                data-product-id="<%= item.product._id %>">
                                            Handle Return
                                        </button>
                                    <% } %>
                                </td>
                                <td>
                                    <a href="/admin/order-details/<%= order.orderId%>/<%= item.product._id %>">
                                        <button class="btn btn-primary">View</button>
                                    </a>
                                </td>
                            </tr>
                            <% }) %>
                        <% }); %>
                    </tbody>
                </table>
            </div>
        
            <nav>
                <ul class="pagination">
                    <% for(let i = 1; i <= totalPages; i++) { %>
                        <li class="page-item <% if (i == currentPage) { %> active <% } %>">
                            <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                        </li>
                    <% } %>
                </ul>
            </nav>
        </div>
     

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.2/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/js/all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
    document.addEventListener("DOMContentLoaded", function () {
        document.querySelectorAll(".order-status-dropdown").forEach(dropdown => {
            dropdown.addEventListener("change", function () {
                const orderId = this.getAttribute("data-order-id");
                const currentStatus = this.getAttribute("data-current-status"); // Get the current status
                const newStatus = this.value;
    
                
                if (currentStatus === "Delivered" || currentStatus === "Cancelled") {
                    Swal.fire({
                        title: "Action Not Allowed",
                        text: "You cannot change the status of a Delivered or Cancelled order.",
                        icon: "error"
                    });
                    this.value = currentStatus; 
                    return;
                }
    
                
                Swal.fire({
                    title: "Are you sure?",
                    text: `Do you want to change the order status to ${newStatus}?`,
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Yes, change it!",
                    cancelButtonText: "No, cancel!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        
                        fetch("/admin/update-order-status", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify({ orderId, status: newStatus })
                        }).then(response => response.json()).then(data => {
                            if (data.success) {
                                Swal.fire("Updated!", "Order status has been changed.", "success")
                                    .then(() => window.location.reload()); 
                            } else {
                                Swal.fire("Error", "Failed to update order status.", "error");
                                this.value = currentStatus; 
                            }
                        });
                    } else {
                        this.value = currentStatus; 
                    }
                });
            });
        });
    });  
    
    
    
document.addEventListener("DOMContentLoaded", function () {
    document.querySelectorAll(".handle-return-btn").forEach(button => {
        button.addEventListener("click", function () {
            const orderId = this.getAttribute("data-order-id");
            const productId = this.getAttribute("data-product-id");

            Swal.fire({
                title: "Handle Return Request",
                text: "Do you want to approve or reject this return request?",
                icon: "question",
                showCancelButton: true,
                confirmButtonText: "Approve",
                cancelButtonText: "Reject",
                showDenyButton: false
            }).then((result) => {
                if (result.isConfirmed) {
                    updateReturnStatus(orderId, productId, "Approved");
                } else if (result.isDismissed && result.dismiss === Swal.DismissReason.cancel) {
                    updateReturnStatus(orderId, productId, "Rejected");
                }
            });
        });
    });

    // Function to update return status
    function updateReturnStatus(orderId, productId, status) {
        fetch("update-return-status", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ orderId, productId, status })
        }).then(response => response.json()).then(data => {
            if (data.success) {
                Swal.fire("Updated!", `Return request has been ${status.toLowerCase()}.`, "success")
                    .then(() => window.location.reload()); 
            } else {
                Swal.fire("Error", "Failed to update return status.", "error");
            }
        });
    }
});
</script> 
</body>
</html>
